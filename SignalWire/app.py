from flask import Flask, request, Response
from twilio.twiml.voice_response import VoiceResponse, Gather
from datetime import datetime

app = Flask(__name__)

@app.route("/", methods=['GET', 'POST'])
def call_handler():
    # The endpoint will be queried by SignalWire when calls are received
    # The request will be responded to with an XML document, generated by the AI Orchestrator

    print(request.values)

    # Get called number and time
    caller = request.values.get('From')
    now = datetime.now()

    # Generate a test response (Will be replaced by AI Orchestrator)
    response = VoiceResponse()
    response.say(f"Hello, {caller}. The current time is {now.strftime('%H:%M')}")
    response.say(f"Your phone number ends in {caller[-2]}.")

    # Gather user input (Will be heavily changed by AI Orchestrator)
    gather = Gather(input='speech', timeout=30, speech_timeone='auto', action='/gather', method='POST')
    gather.say('Please ask your question after the beep.')
    gather.play('https://www.soundjay.com/button/beep-07.wav')  # Play a beep sound
    response.append(gather)

    return Response(response.to_xml(), mimetype='text/xml')

@app.route("/gather", methods=['GET', 'POST'])
def gather_handler():
    # Whenever user input is recieved, this will handle it
    print(request.values)

    # Get user input
    usrPrompt = request.values.get('SpeechResult')     

    # Generate a test response (Will be replaced by AI Orchestrator)
    
    response = VoiceResponse()
    response.say(f"Your question was: {usrPrompt}")

    if "goodbye" in usrPrompt.lower():
        response.say("Goodbye!")
        response.hangup()
    else:
        gather = Gather(input='speech', timeout=30, speech_timeone='auto', action='/gather', method='POST')
        gather.say('Please ask your question after the beep.')
        gather.play('https://www.soundjay.com/button/beep-07.wav')
        response.append(gather)

    return Response(response.to_xml(), mimetype='text/xml')


if __name__ == "__main__":
    app.run(port=5000)